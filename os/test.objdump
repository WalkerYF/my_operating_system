
kernel/kernel.o:     file format elf32-i386


Disassembly of section .text:

00000000 <_start>:
   0:	e8 fe ff             	call   1 <_start+0x1>
   3:	b8 02 00             	mov    $0x2,%ax
   6:	cd 40                	int    $0x40
   8:	eb fe                	jmp    8 <_start+0x8>
   a:	b8 5a 00             	mov    $0x5a,%ax
   d:	e8 15 00             	call   25 <load_com_user_program>
  10:	eb 00                	jmp    12 <run_com_user_program>

00000012 <run_com_user_program>:
  12:	b8 00 30             	mov    $0x3000,%ax
  15:	8e d8                	mov    %ax,%ds
  17:	8e c0                	mov    %ax,%es
  19:	8e d0                	mov    %ax,%ss
  1b:	b8 00 20             	mov    $0x2000,%ax
  1e:	89 c4                	mov    %ax,%sp
  20:	ea 00 00 00 30       	ljmp   $0x3000,$0x0

00000025 <load_com_user_program>:
  25:	50                   	push   %ax
  26:	53                   	push   %bx
  27:	51                   	push   %cx
  28:	52                   	push   %dx
  29:	06                   	push   %es
  2a:	bb 00 30             	mov    $0x3000,%bx
  2d:	8e c3                	mov    %bx,%es
  2f:	bb 00 00             	mov    $0x0,%bx
  32:	b1 0a                	mov    $0xa,%cl
  34:	e8 06 00             	call   3d <ReadSector>
  37:	07                   	pop    %es
  38:	5a                   	pop    %dx
  39:	59                   	pop    %cx
  3a:	5b                   	pop    %bx
  3b:	58                   	pop    %ax
  3c:	c3                   	ret    

0000003d <ReadSector>:
  3d:	55                   	push   %bp
  3e:	89 e5                	mov    %sp,%bp
  40:	83 ec 02             	sub    $0x2,%sp
  43:	88 4e fe             	mov    %cl,-0x2(%bp)
  46:	53                   	push   %bx
  47:	b3 12                	mov    $0x12,%bl
  49:	f6 f3                	div    %bl
  4b:	fe c4                	inc    %ah
  4d:	88 e1                	mov    %ah,%cl
  4f:	88 c6                	mov    %al,%dh
  51:	d0 e8                	shr    %al
  53:	88 c5                	mov    %al,%ch
  55:	80 e6 01             	and    $0x1,%dh
  58:	5b                   	pop    %bx
  59:	b2 00                	mov    $0x0,%dl

0000005b <ReadSector.GoOnReading>:
  5b:	b4 02                	mov    $0x2,%ah
  5d:	8a 46 fe             	mov    -0x2(%bp),%al
  60:	cd 13                	int    $0x13
  62:	72 f7                	jb     5b <ReadSector.GoOnReading>
  64:	83 c4 02             	add    $0x2,%sp
  67:	5d                   	pop    %bp
  68:	c3                   	ret    

00000069 <install_int40>:
  69:	50                   	push   %ax
  6a:	53                   	push   %bx
  6b:	1e                   	push   %ds
  6c:	b8 00 00             	mov    $0x0,%ax
  6f:	8e d8                	mov    %ax,%ds
  71:	8c c8                	mov    %cs,%ax
  73:	c7 06 00 01 80 00    	movw   $0x80,0x100
  79:	a3 02 01             	mov    %ax,0x102
  7c:	1f                   	pop    %ds
  7d:	5b                   	pop    %bx
  7e:	58                   	pop    %ax
  7f:	c3                   	ret    

00000080 <new_int40>:
  80:	88 c3                	mov    %al,%bl
  82:	b0 08                	mov    $0x8,%al
  84:	f6 e3                	mul    %bl
  86:	89 c6                	mov    %ax,%si
  88:	bb 00 00             	mov    $0x0,%bx
  8b:	66 ff 18             	lcalll *(%bx,%si)
  8e:	cf                   	iret   
