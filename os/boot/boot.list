     1                                  ;程序源代码（myos1.asm）
     2                                  ; org  7c00h		; BIOS将把引导扇区加载到0:7C00h处，并开始执行
     3                                  %include "../include/macro.inc"
     4                              <1> loader_code_segment equ 0x0800
     5                              <1> loader_code_entry equ 0x0000
     6                              <1> kernel_code_segment equ 0x1000
     7                              <1> kernel_code_entry equ 0x0000
     8                              <1> 
     9                              <1> fsystem_code_segment equ 0x0100
    10                              <1> fsystem_code_entry equ 0x0000 
    11                              <1> 
    12                              <1> core_header_data_segment equ 1000h
    13                              <1> 
    14                              <1> core_code_entry_header_offset equ 0x2A
    15                              <1> core_code_segment_header_offset equ 0x2C
    16                              <1> core_data_segment_header_offset equ 0x2E
    17                              <1> core_stack_segment_header_offset equ 0x30
    18                              <1> 
    19                              <1> core_stack_length equ 256
    20                              <1> core_entry_header_offset equ 0x32
    21                              <1> 
    22                              <1> user1_program_address equ 0x2000
    23                              <1> user2_program_address equ 0x3000
    24                              <1> user3_program_address equ 0x4000
    25                              <1> user4_program_address equ 0x5000
    26                              <1> 
    27                              <1> user1_bound_x_up equ 1 
    28                              <1> user1_bound_x_down equ 12
    29                              <1> user1_bound_y_left equ 1
    30                              <1> user1_bound_y_right equ 39 
    31                              <1> 
    32                              <1> user2_bound_x_up equ 1 
    33                              <1> user2_bound_x_down equ 12
    34                              <1> user2_bound_y_left equ 40
    35                              <1> user2_bound_y_right equ 78 
    36                              <1> 
    37                              <1> user3_bound_x_up equ 13 
    38                              <1> user3_bound_x_down equ 23
    39                              <1> user3_bound_y_left equ 1
    40                              <1> user3_bound_y_right equ 39
    41                              <1> 
    42                              <1> user4_bound_x_up equ 13 
    43                              <1> user4_bound_x_down equ 23
    44                              <1> user4_bound_y_left equ 40
    45                              <1> user4_bound_y_right equ 78 
    46                              <1> 
    47                              <1> %macro retl 0
    48                              <1>     db 66h
    49                              <1>     ret
    50                              <1> %endmacro
    51                                  section my_mbr vstart=0x7c00
    52                                  Start:
    53 00000000 8CC8                    	mov ax, cs	       ; 置其他段寄存器值与CS相同
    54 00000002 8ED8                    	mov ds, ax	       ; 数据段
    55 00000004 8EC0                    	mov es, ax		 ; 置ES=DS
    56                                      ; 显示字符串
    57                                      ; 此时es 就是0，与cs相同
    58 00000006 66B801130000            	mov eax, 1301h		 ; AH = 13h（功能号）、AL = 01h（光标置于串尾）
    59 0000000C 66BB07000000            	mov ebx, 0007h		 ; 页号为0(BH = 0) 黑底白字(BL = 07h)
    60 00000012 B200                    	mov dl, 0			 ; 列号=0
    61 00000014 B600                    	mov dh, 0		       ; 行号=0
    62 00000016 B92300                  	mov cx, MessageLength  ; CX = 串长（=9）
    63 00000019 BD[4500]                	mov bp, Message		 ; BP=当前串的偏移地址
    64 0000001C CD10                    	int 10h			 ; BIOS的10h功能：显示一行字符
    65                                  LoadnEx:
    66                                       ;读软盘或硬盘上的若干物理扇区到内存的ES:BX处：
    67 0000001E B80010                  	mov ax,kernel_code_segment  ;段地址 ; 存放数据的内存基地址
    68 00000021 8EC0                    	mov es,ax                ;设置段地址（不能直接mov es,段地址）
    69 00000023 BB0000                  	mov bx,0 ;偏移地址; 存放数据的内存偏移地址
    70 00000026 B402                    	mov ah,2                 ; 功能号
    71 00000028 B00A                    	mov al,10                ;扇区数
    72 0000002A B200                    	mov dl,0                 ;驱动器号 ; 软盘为0，硬盘和U盘为80H
    73 0000002C B600                    	mov dh,0                 ;磁头号 ; 起始编号为0
    74 0000002E B502                    	mov ch,2                 ;柱面号 ; 起始编号为0
    75 00000030 B101                    	mov cl,1                 ;起始扇区号 ; 起始编号为1
    76 00000032 CD13                    	int 13H ;                调用读磁盘BIOS的13h功能
    77                                  	; 系统内核已加载到指定内存区域中
    78                                  ; 转入系统内核
    79                                  inkernel:
    80 00000034 B80010                      mov ax, 1000h
    81 00000037 8ED8                        mov ds, ax
    82 00000039 8EC0                        mov es, ax
    83 0000003B 8ED0                        mov ss, ax
    84 0000003D BC0050                      mov sp, 5000h
    85 00000040 EA00000010              	jmp kernel_code_segment:kernel_code_entry
    86                                  Message:
    87 00000045 48656C6C6F2C204D79-     	db 'Hello, MyOs is loading system core.'
    88 0000004E 4F73206973206C6F61-
    89 00000057 64696E672073797374-
    90 00000060 656D20636F72652E   
    91                                  MessageLength  equ ($-Message)
    92 00000068 00<rept>                times 510-($-$$) db 0
    93 000001FE 55AA                    db 0x55,0xaa
    94                                  
    95                                  
    96                                  
    97                                  
    98                                  
